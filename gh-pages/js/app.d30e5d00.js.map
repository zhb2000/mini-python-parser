{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/App.vue?40bc","webpack:///./src/components/Demo.vue?456b","webpack:///./src/components/Editor.vue?4bac","webpack:///./src/components/examples.js","webpack:///src/components/Editor.vue","webpack:///./src/components/Editor.vue?145f","webpack:///./src/components/Editor.vue?7a29","webpack:///./src/components/Display.vue?560b","webpack:///src/components/Display.vue","webpack:///./src/components/Display.vue?63a2","webpack:///./src/components/Display.vue?d8fc","webpack:///../../../src/utils/enhance.ts","webpack:///../../../src/utils/pylike-itertools.ts","webpack:///../../../src/utils/pylike.ts","webpack:///../../src/errors.ts","webpack:///../../../src/utils/strutils.ts","webpack:///../../../src/scanner/preprocessor.ts","webpack:///../../../src/scanner/dfa.ts","webpack:///../../../src/scanner/token.ts","webpack:///../../../src/scanner/scanner.ts","webpack:///../../../src/parser/ast.ts","webpack:///../../../src/parser/ebnf.ts","webpack:///../../../src/parser/parser.ts","webpack:///src/components/Demo.vue","webpack:///./src/components/Demo.vue?9a6b","webpack:///./src/components/Demo.vue?cd6b","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue?bff9","webpack:///./src/main.js","webpack:///./src/components/Display.vue?e6b1","webpack:///./src/components/Editor.vue?df36","webpack:///./src/components/Demo.vue?2033"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","errorMsg","on","parseClick","tokens","parseTree","ast","tree","outShowTree","_v","_s","directives","rawName","expression","domProps","$event","target","composing","code","fibonacci","props","type","String","default","methods","$emit","component","class","tokensActive","tokensTitleClick","parseTreeActive","parseTreeTitleClick","astActive","astTitleClick","treeActive","treeTitleClick","_e","staticStyle","model","callback","$$v","Array","showTreeProp","Boolean","activeTab","computed","components","chain","iterables","iterable","item","f","Error","spaceCnt","indents","position","line","lineNumber","start","stop","codeStr","trim","codes","range","lastIndentNum","indentNum","sequences","e","indentIncValue","indentDecValue","newlineValue","digitValue","letterValue","map","strMap","addNode","children","token","_a","popExpectedToken","scanner","parser","mounted","repr","setTimeout","error","toString","Vue","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.d30e5d00.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Demo')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"full-holder\"},[_c('editor',{attrs:{\"errorMsg\":_vm.errorMsg},on:{\"parseClick\":_vm.parseClick}}),_c('div',{staticClass:\"separator\"}),_c('display',{attrs:{\"tokens\":_vm.tokens,\"parseTree\":_vm.parseTree,\"ast\":_vm.ast,\"tree\":_vm.tree,\"showTreeProp\":_vm.outShowTree}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editor-outer\"},[_c('div',{staticClass:\"editor-bar\"},[_c('div',{staticClass:\"bar-msg\"},[_vm._v(_vm._s(_vm.errorMsg))]),_c('button',{staticClass:\"parse-btn\",on:{\"click\":_vm.parseClick}},[_vm._v(\"Parse\")])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.code),expression:\"code\"}],staticClass:\"editor-textarea\",attrs:{\"wrap\":\"off\",\"placeholder\":\"input Python code here...\"},domProps:{\"value\":(_vm.code)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.code=$event.target.value}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const fibonacci =\r\n    `# Python program to display the Fibonacci sequence\r\n\r\ndef fibonacci(n):\r\n    if n <= 1:\r\n        return n\r\n    else:\r\n        return fibonacci(n - 1) + fibonacci(n - 2)\r\n\r\n\r\na = fibonacci(10)\r\nprint(a)\r\n`;\r\n\r\nexport { fibonacci };\r\n","<template>\r\n  <div class=\"editor-outer\">\r\n    <div class=\"editor-bar\">\r\n      <div class=\"bar-msg\">{{ errorMsg }}</div>\r\n      <button class=\"parse-btn\" @click=\"parseClick\">Parse</button>\r\n    </div>\r\n    <textarea\r\n      v-model=\"code\"\r\n      class=\"editor-textarea\"\r\n      wrap=\"off\"\r\n      placeholder=\"input Python code here...\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as examples from \"./examples.js\";\r\n\r\nexport default {\r\n  props: {\r\n    errorMsg: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      code: examples.fibonacci,\r\n    };\r\n  },\r\n  methods: {\r\n    parseClick() {\r\n      this.$emit(\"parseClick\", this.code);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.editor-outer {\r\n  display: grid;\r\n  grid-template-rows: 50px 1fr;\r\n}\r\n\r\n.editor-bar {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  border-bottom: 1px solid #c4c4c4;\r\n}\r\n\r\n.bar-msg {\r\n  flex-grow: 1;\r\n  padding: 0px 20px;\r\n  color: #c60f13;\r\n}\r\n\r\n.parse-btn {\r\n  margin-right: 8px;\r\n  border-radius: 4px;\r\n  padding: 8px 10px;\r\n  border: 0px;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  background: dodgerblue;\r\n  color: white;\r\n}\r\n.parse-btn:hover {\r\n  background: #3178c6;\r\n}\r\n.parse-btn:active {\r\n  background: #235a97;\r\n}\r\n\r\n.editor-textarea {\r\n  resize: none;\r\n  font-size: 18px;\r\n  padding: 20px;\r\n  font-family: Consolas, \"Courier New\", Courier, monospace;\r\n  overflow: auto;\r\n  border: 0px;\r\n  outline: none;\r\n}\r\n\r\n.editor-textarea:focus {\r\n  outline: none;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=aae4dc50&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Editor.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"display-outer\"},[_c('div',{staticClass:\"display-bar\"},[_c('div',{class:['tab-title', { 'tab-title-active': _vm.tokensActive }],on:{\"click\":_vm.tokensTitleClick}},[_vm._v(\" Tokens \")]),_c('div',{class:['tab-title', { 'tab-title-active': _vm.parseTreeActive }],on:{\"click\":_vm.parseTreeTitleClick}},[_vm._v(\" Parse Tree \")]),_c('div',{class:['tab-title', { 'tab-title-active': _vm.astActive }],on:{\"click\":_vm.astTitleClick}},[_vm._v(\" AST \")]),_c('div',{class:['tab-title', { 'tab-title-active': _vm.treeActive }],on:{\"click\":_vm.treeTitleClick}},[_vm._v(\" Tree \")])]),_c('div',{staticClass:\"json-area\"},[(_vm.tokensActive)?_c('json-view',{attrs:{\"data\":_vm.tokens}}):_vm._e(),(_vm.parseTreeActive)?_c('json-view',{attrs:{\"data\":_vm.parseTree}}):_vm._e(),(_vm.astActive)?_c('json-view',{attrs:{\"data\":_vm.ast}}):_vm._e(),(_vm.treeActive)?_c('div',{staticStyle:{\"width\":\"99%\",\"height\":\"99%\"}},[_c('tree',{staticStyle:{\"width\":\"99%\",\"height\":\"99%\"},attrs:{\"data\":_vm.tree,\"node-text\":\"display\",\"layoutType\":\"vertical\",\"duration\":0,\"zoomable\":true},model:{value:(_vm.tree),callback:function ($$v) {_vm.tree=$$v},expression:\"tree\"}})],1):_vm._e()],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"display-outer\">\r\n    <div class=\"display-bar\">\r\n      <div\r\n        :class=\"['tab-title', { 'tab-title-active': tokensActive }]\"\r\n        @click=\"tokensTitleClick\"\r\n      >\r\n        Tokens\r\n      </div>\r\n      <div\r\n        :class=\"['tab-title', { 'tab-title-active': parseTreeActive }]\"\r\n        @click=\"parseTreeTitleClick\"\r\n      >\r\n        Parse Tree\r\n      </div>\r\n      <div\r\n        :class=\"['tab-title', { 'tab-title-active': astActive }]\"\r\n        @click=\"astTitleClick\"\r\n      >\r\n        AST\r\n      </div>\r\n      <div\r\n        :class=\"['tab-title', { 'tab-title-active': treeActive }]\"\r\n        @click=\"treeTitleClick\"\r\n      >\r\n        Tree\r\n      </div>\r\n    </div>\r\n    <div class=\"json-area\">\r\n      <json-view :data=\"tokens\" v-if=\"tokensActive\" />\r\n      <json-view :data=\"parseTree\" v-if=\"parseTreeActive\" />\r\n      <json-view :data=\"ast\" v-if=\"astActive\" />\r\n      <div v-if=\"treeActive\" style=\"width: 99%; height: 99%\">\r\n        <tree\r\n          v-model=\"tree\"\r\n          :data=\"tree\"\r\n          node-text=\"display\"\r\n          layoutType=\"vertical\"\r\n          :duration=\"0\"\r\n          :zoomable=\"true\"\r\n          style=\"width: 99%; height: 99%\"\r\n        />\r\n        <!-- 必须给 tree 设置 width 和 height，\r\n        而且必须小于 100%，否则会出现奇怪动效 -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport jsonView from \"vue-json-views\";\r\nimport { tree } from \"vued3tree\";\r\n\r\nexport default {\r\n  props: {\r\n    tokens: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    parseTree: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    ast: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    tree: {\r\n      type: Object,\r\n      default: () => {\r\n        return { display: \"root\", children: [] };\r\n      },\r\n    },\r\n    /** \r\n     * 修改 data 后，tree 不会自动重新渲染\r\n     * \r\n     * 只好让外层控件手动控制它重新渲染\r\n     */\r\n    showTreeProp: {\r\n      type: Boolean, \r\n      default: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      activeTab: \"Tokens\",\r\n    };\r\n  },\r\n  computed: {\r\n    tokensActive() {\r\n      return this.activeTab === \"Tokens\";\r\n    },\r\n    parseTreeActive() {\r\n      return this.activeTab === \"Parse Tree\";\r\n    },\r\n    astActive() {\r\n      return this.activeTab === \"AST\";\r\n    },\r\n    treeActive() {\r\n      return this.activeTab === \"Tree\" && this.showTreeProp;\r\n    },\r\n  },\r\n  methods: {\r\n    tokensTitleClick() {\r\n      this.activeTab = \"Tokens\";\r\n    },\r\n    parseTreeTitleClick() {\r\n      this.activeTab = \"Parse Tree\";\r\n    },\r\n    astTitleClick() {\r\n      this.activeTab = \"AST\";\r\n    },\r\n    treeTitleClick() {\r\n      this.activeTab = \"Tree\";\r\n    },\r\n  },\r\n  components: { jsonView, tree },\r\n};\r\n</script>\r\n\r\n<style>\r\n.display-outer {\r\n  display: grid;\r\n  grid-template-rows: 50px 1fr;\r\n  height: 100vh;\r\n}\r\n\r\n.display-bar {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.tab-title {\r\n  margin: 0px 10px;\r\n  padding: 3px 5px;\r\n  border-bottom: 3px solid white;\r\n  cursor: pointer;\r\n}\r\n\r\n.tab-title:hover {\r\n  border-bottom: 3px solid #3178c6;\r\n}\r\n\r\n.tab-title-active {\r\n  border-bottom: 3px solid #3178c6;\r\n  font-weight: bold;\r\n}\r\n\r\n.json-area {\r\n  overflow: auto;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Display.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Display.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Display.vue?vue&type=template&id=393fa29d&\"\nimport script from \"./Display.vue?vue&type=script&lang=js&\"\nexport * from \"./Display.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Display.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/** 实现类似 C# 中 throw 表达式的效果 */\r\nfunction throwErr(ErrorType, ...args) {\r\n    throw new ErrorType(...args);\r\n}\r\n/** 将可空引用转为非空引用，失败则抛异常 */\r\nfunction asNonNull(obj) {\r\n    return obj !== null && obj !== void 0 ? obj : throwErr(Error, 'Null check failed.');\r\n}\r\n/** 会抛异常的断言函数（与 `console.assert` 不同） */\r\nfunction assert(value, message) {\r\n    if (!value) {\r\n        const msg = (message != null)\r\n            ? `Assertion failed: ${message}`\r\n            : 'Assertion failed';\r\n        throw new Error(msg);\r\n    }\r\n}\r\nexport { throwErr, asNonNull, assert };\r\n//# sourceMappingURL=enhance.js.map","function* chain(...iterables) {\r\n    for (const iterable of iterables) {\r\n        for (const item of iterable) {\r\n            yield item;\r\n        }\r\n    }\r\n}\r\nexport { chain };\r\n//# sourceMappingURL=pylike-itertools.js.map","/** 仿 Python 的各种实用函数 */\r\nimport { throwErr } from './enhance';\r\nimport * as itertools from './pylike-itertools';\r\nfunction list(iterable) {\r\n    const _iterable = iterable !== null && iterable !== void 0 ? iterable : [];\r\n    return [..._iterable];\r\n}\r\nfunction* map(func, iterable) {\r\n    for (const x of iterable) {\r\n        yield func(x);\r\n    }\r\n}\r\nfunction* filter(func, iterable) {\r\n    for (const x of iterable) {\r\n        if (func(x)) {\r\n            yield x;\r\n        }\r\n    }\r\n}\r\nfunction* enumerate(iterable, start) {\r\n    let i = start !== null && start !== void 0 ? start : 0;\r\n    for (const x of iterable) {\r\n        yield [i, x];\r\n        i++;\r\n    }\r\n}\r\nfunction* range(a, b, c) {\r\n    let start, stop, step;\r\n    if (b == null && c == null) { //range(stop)\r\n        start = 0;\r\n        stop = a;\r\n        step = 1;\r\n    }\r\n    else { //range(start, stop[, step])\r\n        start = a;\r\n        stop = b !== null && b !== void 0 ? b : throwErr(Error, 'stop should be non null');\r\n        step = c !== null && c !== void 0 ? c : 1;\r\n    }\r\n    if (step >= 0) {\r\n        for (let i = start; i < stop; i += step) {\r\n            yield i;\r\n        }\r\n    }\r\n    else {\r\n        for (let i = start; i > stop; i += step) {\r\n            yield i;\r\n        }\r\n    }\r\n}\r\nfunction sum(iterable, start) {\r\n    const _start = start !== null && start !== void 0 ? start : 0;\r\n    let ans = 0;\r\n    for (const [i, x] of enumerate(iterable)) {\r\n        if (i >= _start) {\r\n            ans += x;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nfunction all(iterable) {\r\n    for (const element of iterable) {\r\n        if (!element) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction any(iterable) {\r\n    for (const element of iterable) {\r\n        if (element) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport { list, map, filter, enumerate, range, sum, all, any, itertools };\r\n//# sourceMappingURL=pylike.js.map","class PySyntaxError extends Error {\r\n}\r\nexport { PySyntaxError };\r\n//# sourceMappingURL=errors.js.map","import { assert } from \"./enhance\";\r\n/** 是否为空串或 `null` 或 `undefined` */\r\nfunction isEmpty(s) {\r\n    return s == null || s.length === 0;\r\n}\r\n/** 是否为空白串（空串也算） */\r\nfunction isBlank(s) {\r\n    return s.trim().length === 0;\r\n}\r\n/** 是否为 `string` 或 `String` 类型 */\r\nfunction isString(s) {\r\n    return s != null && (typeof (s) === 'string' || s instanceof String);\r\n}\r\n/** 是否为数字字符 */\r\nfunction isdigit(ch) {\r\n    assert(ch.length === 1, 'ch is not a char');\r\n    return /^[0-9]$/.test(ch);\r\n}\r\n/** 是否为英文字母字符 */\r\nfunction isalpha(ch) {\r\n    assert(ch.length === 1, 'ch is not a char');\r\n    return /^[a-zA-Z]$/.test(ch);\r\n}\r\nexport { isBlank, isEmpty, isString, isdigit, isalpha };\r\n//# sourceMappingURL=strutils.js.map","import * as strutils from '../utils/strutils';\r\nimport { enumerate, range } from '../utils/pylike';\r\nimport { PySyntaxError } from '../errors';\r\n/** 换行，相当于其他语言里的分号 */\r\nclass NewLine {\r\n    constructor() {\r\n        this._ = undefined;\r\n    }\r\n    toString() { return 'NewLine'; }\r\n}\r\n/** 缩进增，相当于其他语言里的左花括号 */\r\nclass IndentInc {\r\n    constructor() {\r\n        this._ = undefined;\r\n    }\r\n    toString() { return 'IndentInc'; }\r\n}\r\n/** 缩进减，相当于其他语言里的左花括号 */\r\nclass IndentDec {\r\n    constructor() {\r\n        this._ = undefined;\r\n    }\r\n    toString() { return 'IndentDec'; }\r\n}\r\n/** 表示一段字符或一个字符 */\r\nclass CharSequence {\r\n    constructor(data, position) {\r\n        this.data = data;\r\n        this.position = position;\r\n    }\r\n}\r\n/**\r\n * 将一行代码分为缩进、代码两部分\r\n *\r\n * @param line 一行源代码\r\n * @param lineNumber 行号\r\n * @returns [缩进段, 代码段]\r\n */\r\nfunction splitLine(line, lineNumber) {\r\n    line = line.trimRight();\r\n    //缩进段，每个 CharSequence 表示一个缩进\r\n    const indents = [];\r\n    let spaceCnt = 0;\r\n    let i = 0;\r\n    //遍历 line 前面的缩进部分\r\n    while (i < line.length && strutils.isBlank(line[i])) {\r\n        //将四个空格或一个 Tab 视为一个缩进单位\r\n        if (line[i] === ' ') {\r\n            spaceCnt++;\r\n            if (spaceCnt === 4) {\r\n                indents.push({\r\n                    data: new IndentInc(),\r\n                    position: { line: lineNumber, start: i - 3, stop: i + 1 }\r\n                });\r\n                spaceCnt = 0;\r\n            }\r\n        }\r\n        else if (line[i] === '\\t') {\r\n            if (spaceCnt != 0) {\r\n                throw new PySyntaxError(`Indent error at line ${i + 1}.`);\r\n            }\r\n            indents.push({\r\n                data: new IndentInc(),\r\n                position: { line: lineNumber, start: i, stop: i + 1 }\r\n            });\r\n        }\r\n        i++;\r\n    }\r\n    const codeStr = line.trim();\r\n    //代码段，第一个 CharSequence 表示代码部分，第二个 CharSequence 表示换行\r\n    const codes = [\r\n        {\r\n            data: codeStr,\r\n            position: {\r\n                line: lineNumber,\r\n                start: i,\r\n                stop: i + codeStr.length\r\n            }\r\n        },\r\n        {\r\n            data: new NewLine(),\r\n            position: {\r\n                line: lineNumber,\r\n                start: i + codeStr.length,\r\n                stop: i + codeStr.length\r\n            }\r\n        }\r\n    ];\r\n    return [indents, codes];\r\n}\r\nfunction makeCharSequences(text) {\r\n    text = text.replace('\\r\\n', '\\n').replace('\\r', '\\n');\r\n    const lines = text.split('\\n');\r\n    const sequences = [];\r\n    let lastIndentNum = 0; //上一行缩进数目\r\n    for (const [lineNumber, line] of enumerate(lines)) {\r\n        if (strutils.isBlank(line)) { //忽略空行\r\n            continue;\r\n        }\r\n        if (/^#.*$/.test(line.trim())) { //忽略全注释行\r\n            continue;\r\n        }\r\n        const [indents, codes] = splitLine(line, lineNumber);\r\n        const indentNum = indents.length;\r\n        if (indentNum === lastIndentNum) {\r\n            //缩进不变\r\n            sequences.push(...codes);\r\n        }\r\n        else if (indentNum < lastIndentNum) {\r\n            //缩进减\r\n            for (const _ of range(lastIndentNum - indentNum)) {\r\n                sequences.push({\r\n                    data: new IndentDec(),\r\n                    position: { line: lineNumber, start: 0, stop: 0 }\r\n                });\r\n            }\r\n            sequences.push(...codes);\r\n        }\r\n        else { //indentNum > lastIndentNum\r\n            //缩进增\r\n            for (let i = indents.length - 1; i > indents.length - 1 - (indentNum - lastIndentNum); i--) {\r\n                sequences.push(indents[i]);\r\n            }\r\n            sequences.push(...codes);\r\n        }\r\n        lastIndentNum = indentNum;\r\n    }\r\n    //到达末尾，插入缩进减\r\n    if (lastIndentNum > 0) {\r\n        for (const _ of range(lastIndentNum)) {\r\n            sequences.push({\r\n                data: new IndentDec(),\r\n                position: { line: lines.length + 1, start: 0, stop: 0 }\r\n            });\r\n        }\r\n    }\r\n    return sequences;\r\n}\r\n/** 预处理后的源代码 */\r\nclass SourceCode {\r\n    constructor(text) {\r\n        this.sequences = makeCharSequences(text);\r\n    }\r\n    *iterCharsWithPos() {\r\n        for (const seq of this.sequences) {\r\n            if (strutils.isString(seq.data)) { // CharSequence 装着一段字符\r\n                for (const [i, ch] of enumerate(seq.data, seq.position.start)) {\r\n                    yield [{ line: seq.position.line, start: i, stop: i + 1 }, ch];\r\n                }\r\n            }\r\n            else { // CharSequence 装着一个字符\r\n                yield [seq.position, seq.data];\r\n            }\r\n        }\r\n    }\r\n}\r\nexport { NewLine, IndentInc, IndentDec, SourceCode, makeCharSequences, CharSequence, };\r\n//# sourceMappingURL=preprocessor.js.map","import { isdigit, isalpha } from '../utils/strutils';\r\nimport { asNonNull } from '../utils/enhance';\r\nimport { itertools, map, range } from '../utils/pylike';\r\nimport { IndentInc, IndentDec, NewLine } from './preprocessor';\r\n/** 键为 PyChar 的 Map */\r\nclass PyCharMap {\r\n    constructor() {\r\n        this.strMap = new Map();\r\n        this.indentIncValue = undefined;\r\n        this.indentDecValue = undefined;\r\n        this.newlineValue = undefined;\r\n        this.digitValue = undefined;\r\n        this.letterValue = undefined;\r\n    }\r\n    setIndentIncValue(value) {\r\n        this.indentIncValue = value;\r\n        return this;\r\n    }\r\n    setIndentDecValue(value) {\r\n        this.indentDecValue = value;\r\n        return this;\r\n    }\r\n    setNewLineValue(value) {\r\n        this.newlineValue = value;\r\n        return this;\r\n    }\r\n    setDigitValue(value) {\r\n        this.digitValue = value;\r\n        return this;\r\n    }\r\n    setLetterValue(value) {\r\n        this.letterValue = value;\r\n        return this;\r\n    }\r\n    setStrMap(map) {\r\n        this.strMap = map;\r\n        return this;\r\n    }\r\n    set(key, value) {\r\n        if (key instanceof IndentInc) {\r\n            this.indentIncValue = value;\r\n        }\r\n        else if (key instanceof IndentDec) {\r\n            this.indentDecValue = value;\r\n        }\r\n        else if (key instanceof NewLine) {\r\n            this.newlineValue = value;\r\n        }\r\n        else {\r\n            this.strMap.set(key, value);\r\n        }\r\n        return this;\r\n    }\r\n    get(key) {\r\n        var _a, _b;\r\n        if (key instanceof IndentInc) {\r\n            return this.indentIncValue;\r\n        }\r\n        else if (key instanceof IndentDec) {\r\n            return this.indentDecValue;\r\n        }\r\n        else if (key instanceof NewLine) {\r\n            return this.newlineValue;\r\n        }\r\n        else if (isdigit(key)) {\r\n            return (_a = this.strMap.get(key)) !== null && _a !== void 0 ? _a : this.digitValue;\r\n        }\r\n        else if (isalpha(key)) {\r\n            return (_b = this.strMap.get(key)) !== null && _b !== void 0 ? _b : this.letterValue;\r\n        }\r\n        else {\r\n            return this.strMap.get(key);\r\n        }\r\n    }\r\n}\r\n/** 词法分析所用的 DFA */\r\nclass Automaton {\r\n    constructor() {\r\n        /** 状态名称 -> 状态节点 */\r\n        this.nodes = new Map();\r\n        this.initNodes();\r\n        this.cursor = asNonNull(this.nodes.get('1'));\r\n    }\r\n    /** 能否消耗字符 `ch` */\r\n    canConsume(ch) { return this.cursor.to(ch) != null; }\r\n    /** 消耗字符 `ch` 并转移状态 */\r\n    consume(ch) { this.cursor = asNonNull(this.cursor.to(ch)); }\r\n    /** 当前状态 */\r\n    current() { return this.cursor; }\r\n    /** 让 cursor 返回初始状态 */\r\n    reset() { this.cursor = asNonNull(this.nodes.get('1')); }\r\n    /** 填充 nodes 字典 */\r\n    initNodes() {\r\n        const that = this;\r\n        //1（初态）\r\n        this.addNode('1', false, new PyCharMap()\r\n            .setLetterValue('id2')\r\n            .setDigitValue('n2')\r\n            .setIndentIncValue('d2')\r\n            .setIndentDecValue('d3')\r\n            .setNewLineValue('d4')\r\n            .setStrMap(new Map([\r\n            ['#', 'c2'], ['_', 'id2'], ['\"', 's5'],\r\n            [\"'\", 's2'], ['+', 'o2'], ['-', 'o3'],\r\n            ['*', 'o4'], ['/', 'o5'], ['%', 'o20'],\r\n            ['<', 'o8'], ['>', 'o9'], ['=', 'o10'],\r\n            ['&', 'o16'], ['|', 'o17'], ['~', 'o18'],\r\n            ['^', 'o19'], ['(', 'd5'], [')', 'd6'],\r\n            ['[', 'd7'], [']', 'd8'], ['{', 'd9'],\r\n            [']', 'd10'], [',', 'd11'], ['.', 'd12'],\r\n            [':', 'd13'], [' ', '1'], ['\\t', '1']\r\n        ])));\r\n        //c2\r\n        this.nodes.set('c2', {\r\n            name: 'c2', acceptable: true,\r\n            to(ch) {\r\n                return (ch instanceof NewLine) ? undefined : that.nodes.get('c2');\r\n            }\r\n        });\r\n        //id2\r\n        this.addNode('id2', true, new PyCharMap()\r\n            .setLetterValue('id2')\r\n            .setDigitValue('id2')\r\n            .set('_', 'id2'));\r\n        //n2\r\n        this.addNode('n2', true, new PyCharMap()\r\n            .setDigitValue('n2').set('.', 'n3'));\r\n        //n3\r\n        this.addNode('n3', false, new PyCharMap().setDigitValue('n4'));\r\n        //n4\r\n        this.addNode('n4', true, new PyCharMap().setDigitValue('n4'));\r\n        //s5\r\n        this.nodes.set('s5', {\r\n            name: 's5', acceptable: false,\r\n            to(ch) {\r\n                let key = undefined;\r\n                if (ch === '\"') {\r\n                    key = 's4';\r\n                }\r\n                else if (ch === '\\\\') {\r\n                    key = 's6';\r\n                }\r\n                else if (!(ch instanceof NewLine)) {\r\n                    key = 's5';\r\n                }\r\n                return (key != null) ? that.nodes.get(key) : undefined;\r\n            }\r\n        });\r\n        //s6\r\n        this.nodes.set('s6', {\r\n            name: 's6', acceptable: false,\r\n            to(ch) {\r\n                return (!(ch instanceof NewLine))\r\n                    ? that.nodes.get('s5') : undefined;\r\n            }\r\n        });\r\n        //s4\r\n        this.addNode('s4', true, new PyCharMap());\r\n        //s2\r\n        this.nodes.set('s2', {\r\n            name: 's2', acceptable: false,\r\n            to(ch) {\r\n                let key = undefined;\r\n                if (ch === \"'\") {\r\n                    key = 's4';\r\n                }\r\n                else if (ch === '\\\\') {\r\n                    key = 's3';\r\n                }\r\n                else if (!(ch instanceof NewLine)) {\r\n                    key = 's2';\r\n                }\r\n                return (key != null) ? that.nodes.get(key) : undefined;\r\n            }\r\n        });\r\n        //s3\r\n        this.nodes.set('s3', {\r\n            name: 's3', acceptable: false,\r\n            to(ch) {\r\n                return (!(ch instanceof NewLine))\r\n                    ? that.nodes.get('s2') : undefined;\r\n            }\r\n        });\r\n        //o2\r\n        this.addNode('o2', true, new PyCharMap());\r\n        //o3\r\n        this.addNode('o3', true, new PyCharMap());\r\n        //o4\r\n        this.addNode('o4', true, new PyCharMap().set('*', 'o6'));\r\n        //o5\r\n        this.addNode('o5', true, new PyCharMap().set('/', 'o7'));\r\n        //o6\r\n        this.addNode('o6', true, new PyCharMap());\r\n        //o7\r\n        this.addNode('o7', true, new PyCharMap());\r\n        //o20\r\n        this.addNode('o20', true, new PyCharMap());\r\n        //o8\r\n        this.addNode('o8', true, new PyCharMap()\r\n            .set('<', 'o14').set('=', 'o11'));\r\n        //o14\r\n        this.addNode('o14', true, new PyCharMap());\r\n        //o11\r\n        this.addNode('o11', true, new PyCharMap());\r\n        //o9\r\n        this.addNode('o9', true, new PyCharMap()\r\n            .set('>', 'o15').set('=', 'o12'));\r\n        //o10\r\n        this.addNode('o10', true, new PyCharMap().set('=', 'o13'));\r\n        //o11-o19, d2-d13\r\n        for (const name of itertools.chain(map(i => 'o' + i, range(11, 19 + 1)), map(i => 'd' + i, range(2, 13 + 1)))) {\r\n            this.addNode(name, true, new PyCharMap());\r\n        }\r\n    }\r\n    /**\r\n     * 向 nodes 中添加状态节点\r\n     *\r\n     * @param name 节点名称\r\n     * @param acceptable 是否为终态\r\n     * @param char2NodeName 状态转移表\r\n     */\r\n    addNode(name, acceptable, char2NodeName) {\r\n        const that = this;\r\n        const node = {\r\n            name, acceptable, char2NodeName,\r\n            to(ch) {\r\n                const key = this.char2NodeName.get(ch);\r\n                return (key != null) ? that.nodes.get(key) : undefined;\r\n            }\r\n        };\r\n        this.nodes.set(name, node);\r\n    }\r\n}\r\nexport { Automaton };\r\n//# sourceMappingURL=dfa.js.map","import { assert, throwErr } from \"../utils/enhance\";\r\nclass TokenBase {\r\n    constructor(value, position) {\r\n        assert(this.verify(value));\r\n        this.value = value;\r\n        this.position = position;\r\n    }\r\n    get type() { return this.constructor.name; }\r\n    toString() { return `{ type: ${this.type}, value: ${this.value} }`; }\r\n    repr() { return { 'type': this.type, 'value': this.value }; }\r\n    verify(value) { return true; }\r\n    ;\r\n}\r\nclass CommentToken extends TokenBase {\r\n    verify(s) { return s[0] === '#'; }\r\n    getComment() { return this.value.substr(1); }\r\n}\r\nclass IntToken extends TokenBase {\r\n    getInt() { return BigInt(this.value); }\r\n}\r\nclass FloatToken extends TokenBase {\r\n    getFloat() { return Number.parseFloat(this.value); }\r\n}\r\nclass StringToken extends TokenBase {\r\n    verify(s) {\r\n        return (s[0] === \"'\" && s[s.length - 1] === \"'\")\r\n            || (s[0] === '\"' && s[s.length - 1] === '\"');\r\n    }\r\n    getString() {\r\n        return this.value.substr(1, this.value.length - 2)\r\n            .replace(String.raw `\\n`, '\\n')\r\n            .replace(String.raw `\\r`, '\\r')\r\n            .replace(String.raw `\\t`, '\\t')\r\n            .replace(String.raw `\\'`, \"'\")\r\n            .replace(String.raw `\\\"`, '\"')\r\n            .replace(String.raw `\\\\`, '\\\\');\r\n    }\r\n}\r\nclass IdentifierToken extends TokenBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\n//#region Keyword Token\r\nclass KeywordToken extends TokenBase {\r\n    verify(s) { return s === this.keyword(); }\r\n}\r\nclass DefToken extends KeywordToken {\r\n    keyword() { return 'def'; }\r\n}\r\nclass IfToken extends KeywordToken {\r\n    keyword() { return 'if'; }\r\n}\r\nclass ElseToken extends KeywordToken {\r\n    keyword() { return 'else'; }\r\n}\r\nclass ElifToken extends KeywordToken {\r\n    keyword() { return 'elif'; }\r\n}\r\nclass WhileToken extends KeywordToken {\r\n    keyword() { return 'while'; }\r\n}\r\nclass ReturnToken extends KeywordToken {\r\n    keyword() { return 'return'; }\r\n}\r\nclass BreakToken extends KeywordToken {\r\n    keyword() { return 'break'; }\r\n}\r\nclass ContinueToken extends KeywordToken {\r\n    keyword() { return 'continue'; }\r\n}\r\nclass AndToken extends KeywordToken {\r\n    keyword() { return 'and'; }\r\n}\r\nclass OrToken extends KeywordToken {\r\n    keyword() { return 'or'; }\r\n}\r\nclass NotToken extends KeywordToken {\r\n    keyword() { return 'not'; }\r\n}\r\nclass IsToken extends KeywordToken {\r\n    keyword() { return 'is'; }\r\n}\r\nclass TrueToken extends KeywordToken {\r\n    keyword() { return 'True'; }\r\n}\r\nclass FalseToken extends KeywordToken {\r\n    keyword() { return 'False'; }\r\n}\r\nclass NoneToken extends KeywordToken {\r\n    keyword() { return 'None'; }\r\n}\r\nclass PassToken extends KeywordToken {\r\n    keyword() { return 'pass'; }\r\n}\r\nclass GlobalToken extends KeywordToken {\r\n    keyword() { return 'global'; }\r\n}\r\nfunction makeKeywordToken(s, pos) {\r\n    var _a;\r\n    const ctor = (_a = keywordStr2Ctor.get(s)) !== null && _a !== void 0 ? _a : throwErr(Error, `${s} is not a Python keyword.`);\r\n    return new ctor(s, pos);\r\n}\r\nfunction isPyKeyword(s) {\r\n    return keywordStr2Ctor.has(s);\r\n}\r\nconst keywordStr2Ctor = new Map([\r\n    ['def', DefToken],\r\n    ['if', IfToken],\r\n    ['else', ElseToken],\r\n    ['elif', ElifToken],\r\n    ['while', WhileToken],\r\n    ['return', ReturnToken],\r\n    ['break', BreakToken],\r\n    ['continue', ContinueToken],\r\n    ['and', AndToken],\r\n    ['or', OrToken],\r\n    ['not', NotToken],\r\n    ['is', IsToken],\r\n    ['True', TrueToken],\r\n    ['False', FalseToken],\r\n    ['None', NoneToken],\r\n    ['pass', PassToken],\r\n    ['global', GlobalToken]\r\n]);\r\n//#endregion\r\n//#region Punctuator Token\r\nclass PunctuatorToken extends TokenBase {\r\n    verify(s) { return s === this.punctuator(); }\r\n}\r\nclass LessToken extends PunctuatorToken {\r\n    punctuator() { return '<'; }\r\n}\r\nclass LeqToken extends PunctuatorToken {\r\n    punctuator() { return '<='; }\r\n}\r\nclass GreaterToken extends PunctuatorToken {\r\n    punctuator() { return '>'; }\r\n}\r\nclass GeqToken extends PunctuatorToken {\r\n    punctuator() { return '>='; }\r\n}\r\nclass EqualsToken extends PunctuatorToken {\r\n    punctuator() { return '=='; }\r\n}\r\nclass NotEqualsToken extends PunctuatorToken {\r\n    punctuator() { return '!='; }\r\n}\r\nclass AssignToken extends PunctuatorToken {\r\n    punctuator() { return '='; }\r\n}\r\nclass PlusToken extends PunctuatorToken {\r\n    punctuator() { return '+'; }\r\n}\r\nclass MinusToken extends PunctuatorToken {\r\n    punctuator() { return '-'; }\r\n}\r\nclass MultiplyToken extends PunctuatorToken {\r\n    punctuator() { return '*'; }\r\n}\r\nclass PowToken extends PunctuatorToken {\r\n    punctuator() { return '**'; }\r\n}\r\nclass DivToken extends PunctuatorToken {\r\n    punctuator() { return '/'; }\r\n}\r\nclass DivIntToken extends PunctuatorToken {\r\n    punctuator() { return '//'; }\r\n}\r\nclass ModToken extends PunctuatorToken {\r\n    punctuator() { return '%'; }\r\n}\r\nclass ShiftLeftToken extends PunctuatorToken {\r\n    punctuator() { return '<<'; }\r\n}\r\nclass ShiftRightToken extends PunctuatorToken {\r\n    punctuator() { return '>>'; }\r\n}\r\nclass BitAndToken extends PunctuatorToken {\r\n    punctuator() { return '&'; }\r\n}\r\nclass BitOrToken extends PunctuatorToken {\r\n    punctuator() { return '|'; }\r\n}\r\nclass BitNotToken extends PunctuatorToken {\r\n    punctuator() { return '~'; }\r\n}\r\nclass BitXorToken extends PunctuatorToken {\r\n    punctuator() { return '^'; }\r\n}\r\n/** 左圆括号 `(` */\r\nclass LeftParenthesesToken extends PunctuatorToken {\r\n    punctuator() { return '('; }\r\n}\r\n/** 右圆括号 `)` */\r\nclass RightParenthesesToken extends PunctuatorToken {\r\n    punctuator() { return ')'; }\r\n}\r\n/** 左方括号 `[` */\r\nclass LeftBracketToken extends PunctuatorToken {\r\n    punctuator() { return '['; }\r\n}\r\n/** 右方括号 `]` */\r\nclass RightBracketToken extends PunctuatorToken {\r\n    punctuator() { return ']'; }\r\n}\r\n/** 左花括号 `{` */\r\nclass LeftBraceToken extends PunctuatorToken {\r\n    punctuator() { return '{'; }\r\n}\r\n/** 右花括号 `}` */\r\nclass RightBraceToken extends PunctuatorToken {\r\n    punctuator() { return '}'; }\r\n}\r\nclass CommaToken extends PunctuatorToken {\r\n    punctuator() { return ','; }\r\n}\r\nclass DotToken extends PunctuatorToken {\r\n    punctuator() { return '.'; }\r\n}\r\nclass ColonToken extends PunctuatorToken {\r\n    punctuator() { return ':'; }\r\n}\r\nfunction makePunctuatorToken(s, pos) {\r\n    var _a;\r\n    const ctor = (_a = punctuatorStr2Ctor.get(s)) !== null && _a !== void 0 ? _a : throwErr(Error, `${s} is not a Python symbol.`);\r\n    return new ctor(s, pos);\r\n}\r\nconst punctuatorStr2Ctor = new Map([\r\n    ['<', LessToken],\r\n    ['<=', LeqToken],\r\n    ['>', GreaterToken],\r\n    ['>=', GeqToken],\r\n    ['==', EqualsToken],\r\n    ['!=', NotEqualsToken],\r\n    ['=', AssignToken],\r\n    ['+', PlusToken],\r\n    ['-', MinusToken],\r\n    ['*', MultiplyToken],\r\n    ['**', PowToken],\r\n    ['/', DivToken],\r\n    ['//', DivIntToken],\r\n    ['%', ModToken],\r\n    ['<<', ShiftLeftToken],\r\n    ['>>', ShiftRightToken],\r\n    ['&', BitAndToken],\r\n    ['|', BitOrToken],\r\n    ['~', BitNotToken],\r\n    ['^', BitXorToken],\r\n    ['(', LeftParenthesesToken],\r\n    [')', RightParenthesesToken],\r\n    ['[', LeftBracketToken],\r\n    [']', RightBracketToken],\r\n    ['{', LeftBraceToken],\r\n    ['}', RightBraceToken],\r\n    [',', CommaToken],\r\n    ['.', DotToken],\r\n    [':', ColonToken]\r\n]);\r\n//#endregion\r\n//#region Special Punctuator Token\r\nclass SpecialPunctuatorToken {\r\n    constructor(position) { this.position = position; }\r\n    get value() { return ''; }\r\n    get type() { return this.constructor.name; }\r\n    toString() { return `{ type: ${this.type}, value: ${this.value} }`; }\r\n    repr() { return { 'type': this.type, 'value': this.value }; }\r\n}\r\nclass IndentIncToken extends SpecialPunctuatorToken {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nclass IndentDecToken extends SpecialPunctuatorToken {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nclass NewLineToken extends SpecialPunctuatorToken {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\n//#endregion\r\nexport { CommentToken, IdentifierToken, IntToken, FloatToken, StringToken, MultiplyToken, DivIntToken, DivToken, ModToken, PlusToken, MinusToken, ShiftLeftToken, ShiftRightToken, BitAndToken, BitOrToken, BitNotToken, BitXorToken, LessToken, LeqToken, GreaterToken, GeqToken, EqualsToken, NotEqualsToken, IsToken, AndToken, OrToken, NotToken, LeftParenthesesToken, RightParenthesesToken, DotToken, LeftBracketToken, RightBracketToken, CommaToken, PowToken, PassToken, BreakToken, ContinueToken, GlobalToken, ReturnToken, AssignToken, WhileToken, IfToken, ElifToken, ElseToken, DefToken, ColonToken, TrueToken, FalseToken, NoneToken, IndentIncToken, IndentDecToken, NewLineToken, isPyKeyword, makeKeywordToken, makePunctuatorToken, };\r\n//# sourceMappingURL=token.js.map","import { itertools, map, range } from '../utils/pylike';\r\nimport { throwErr } from '../utils/enhance';\r\nimport { PySyntaxError } from '../errors';\r\nimport { SourceCode } from './preprocessor';\r\nimport { Automaton } from './dfa';\r\nimport { CommentToken, IntToken, FloatToken, IdentifierToken, StringToken, IndentIncToken, IndentDecToken, NewLineToken, isPyKeyword, makeKeywordToken, makePunctuatorToken, } from './token';\r\n/** 词法分析器 */\r\nclass Scanner {\r\n    constructor() {\r\n        this.dfa = new Automaton();\r\n        this.charBuffer = [];\r\n        this.posBuffer = [];\r\n        /** 状态名称 -> 制造对应类型 Token 的工厂函数 */\r\n        this.tokenFactories = new Map();\r\n        this.initTokenFactories();\r\n    }\r\n    /** 将源代码转换为 Token 序列 */\r\n    scan(text) {\r\n        const tokens = [];\r\n        const sourceCode = new SourceCode(text);\r\n        const posAndChar = [...sourceCode.iterCharsWithPos()];\r\n        let i = 0;\r\n        while (i < posAndChar.length) {\r\n            const [pos, ch] = posAndChar[i];\r\n            if (this.canConsume(ch)) {\r\n                this.consume(ch, pos);\r\n                i++;\r\n            }\r\n            else {\r\n                if (this.dfa.current().acceptable) {\r\n                    const token = this.retrieveToken();\r\n                    if (!(token instanceof CommentToken)) { //忽略尾追的注释\r\n                        tokens.push(token);\r\n                    }\r\n                }\r\n                else {\r\n                    const wrongToken = this.charBuffer.join('') + ch;\r\n                    const start = this.posBuffer.length > 0 ? this.posBuffer[0].start : 0;\r\n                    throw new PySyntaxError(`Unexpected token ${wrongToken}, ` +\r\n                        `line ${pos.line + 1}, col ${start + 1}`);\r\n                }\r\n            }\r\n        }\r\n        //最后一个字符\r\n        if (this.dfa.current().acceptable) {\r\n            const token = this.retrieveToken();\r\n            if (!(token instanceof CommentToken)) {\r\n                tokens.push(token);\r\n            }\r\n        }\r\n        else {\r\n            const wrongToken = this.charBuffer.join('');\r\n            throw new PySyntaxError(`Unexpected token ${wrongToken}`);\r\n        }\r\n        return tokens;\r\n    }\r\n    /** 清除 buffer 并让 cursor 返回初始状态 */\r\n    clear() {\r\n        this.dfa.reset();\r\n        this.charBuffer.length = 0;\r\n        this.posBuffer.length = 0;\r\n    }\r\n    canConsume(ch) {\r\n        return this.dfa.canConsume(ch);\r\n    }\r\n    consume(ch, pos) {\r\n        this.dfa.consume(ch);\r\n        //若转移后仍在开始状态，表明读入的是空白字符\r\n        //忽略空白字符，不要放到 buffer 中\r\n        if (this.dfa.current().name !== '1') {\r\n            this.charBuffer.push(ch);\r\n            this.posBuffer.push(pos);\r\n        }\r\n    }\r\n    /** 获取 Token，不修改 buffer 和 DFA 状态指针 */\r\n    getToken() {\r\n        var _a;\r\n        const factory = (_a = this.tokenFactories.get(this.dfa.current().name)) !== null && _a !== void 0 ? _a : throwErr(Error, `Node ${this.dfa.current().name} without a token factory`);\r\n        const tokenStr = this.charBuffer.join('');\r\n        const tokenPos = {\r\n            line: this.posBuffer[0].line,\r\n            start: this.posBuffer[0].start,\r\n            stop: this.posBuffer[this.posBuffer.length - 1].stop\r\n        };\r\n        return factory(tokenStr, tokenPos);\r\n    }\r\n    /** 获取 Token 并清空 buffer，DFA 回初态 */\r\n    retrieveToken() {\r\n        const token = this.getToken();\r\n        this.clear();\r\n        return token;\r\n    }\r\n    initTokenFactories() {\r\n        //Comment Token: c2\r\n        this.tokenFactories.set('c2', (s, pos) => new CommentToken(s, pos));\r\n        //identifier or keyword: id2\r\n        this.tokenFactories.set('id2', (s, pos) => isPyKeyword(s) ? makeKeywordToken(s, pos) : new IdentifierToken(s, pos));\r\n        //int: n2\r\n        this.tokenFactories.set('n2', (s, pos) => new IntToken(s, pos));\r\n        //float: n4\r\n        this.tokenFactories.set('n4', (s, pos) => new FloatToken(s, pos));\r\n        //str: s4\r\n        this.tokenFactories.set('s4', (s, pos) => new StringToken(s, pos));\r\n        //Punctuator Token: o2-o20, o5-o13\r\n        for (const name of itertools.chain(map(i => 'o' + i, range(2, 20 + 1)), map(i => 'd' + i, range(5, 13 + 1)))) {\r\n            this.tokenFactories.set(name, makePunctuatorToken);\r\n        }\r\n        //Special Punctuator Token: d2, d3, d4\r\n        this.tokenFactories.set('d2', (_, pos) => new IndentIncToken(pos));\r\n        this.tokenFactories.set('d3', (_, pos) => new IndentDecToken(pos));\r\n        this.tokenFactories.set('d4', (_, pos) => new NewLineToken(pos));\r\n    }\r\n}\r\nexport { Scanner };\r\n//# sourceMappingURL=scanner.js.map","import { assert } from \"../utils/enhance\";\r\nclass BinaryNode {\r\n    constructor(lch, rch) {\r\n        this.lch = lch;\r\n        this.rch = rch;\r\n    }\r\n    get type() { return this.constructor.name; }\r\n    get children() { return [this.lch, this.rch]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            left: this.lch.repr(),\r\n            right: this.rch.repr()\r\n        };\r\n    }\r\n}\r\nclass AddNode extends BinaryNode {\r\n    get display() { return '+'; }\r\n}\r\nclass MinusNode extends BinaryNode {\r\n    get display() { return '-'; }\r\n}\r\nclass MultiplyNode extends BinaryNode {\r\n    get display() { return '*'; }\r\n}\r\nclass DivNode extends BinaryNode {\r\n    get display() { return '/'; }\r\n}\r\nclass DivIntNode extends BinaryNode {\r\n    get display() { return '//'; }\r\n}\r\nclass ModNode extends BinaryNode {\r\n    get display() { return '%'; }\r\n}\r\nclass PowNode extends BinaryNode {\r\n    get display() { return '**'; }\r\n}\r\nclass ShiftLeftNode extends BinaryNode {\r\n    get display() { return '<<'; }\r\n}\r\nclass ShiftRightNode extends BinaryNode {\r\n    get display() { return '>>'; }\r\n}\r\nclass BitAndNode extends BinaryNode {\r\n    get display() { return '&'; }\r\n}\r\nclass BitOrNode extends BinaryNode {\r\n    get display() { return '|'; }\r\n}\r\nclass BitXorNode extends BinaryNode {\r\n    get display() { return '^'; }\r\n}\r\nclass AndNode extends BinaryNode {\r\n    get display() { return 'and'; }\r\n}\r\nclass OrNode extends BinaryNode {\r\n    get display() { return 'or'; }\r\n}\r\nclass LessNode extends BinaryNode {\r\n    get display() { return '<'; }\r\n}\r\nclass LeqNode extends BinaryNode {\r\n    get display() { return '<='; }\r\n}\r\nclass GreaterNode extends BinaryNode {\r\n    get display() { return '>'; }\r\n}\r\nclass GeqNode extends BinaryNode {\r\n    get display() { return '>='; }\r\n}\r\nclass EqualsNode extends BinaryNode {\r\n    get display() { return '=='; }\r\n}\r\nclass NotEqualsNode extends BinaryNode {\r\n    get display() { return '!='; }\r\n}\r\nclass IsNode extends BinaryNode {\r\n    get display() { return 'is'; }\r\n}\r\nclass AssignNode extends BinaryNode {\r\n    get display() { return '='; }\r\n}\r\nclass UnaryNode {\r\n    constructor(child) { this.child = child; }\r\n    get type() { return this.constructor.name; }\r\n    get children() { return [this.child]; }\r\n    repr() { return { type: this.type, operand: this.child.repr() }; }\r\n}\r\nclass BitNotNode extends UnaryNode {\r\n    get display() { return '~'; }\r\n}\r\nclass NotNode extends UnaryNode {\r\n    get display() { return 'not'; }\r\n}\r\nclass PosNode extends UnaryNode {\r\n    get display() { return '+'; }\r\n}\r\nclass NegNode extends UnaryNode {\r\n    get display() { return '-'; }\r\n}\r\nclass SimpleKeywordNode {\r\n    constructor() {\r\n        this.children = [];\r\n    }\r\n    get type() { return this.constructor.name; }\r\n    repr() { return { type: this.type }; }\r\n}\r\nclass TrueNode extends SimpleKeywordNode {\r\n    get display() { return 'True'; }\r\n}\r\nclass FalseNode extends SimpleKeywordNode {\r\n    get display() { return 'False'; }\r\n}\r\nclass NoneNode extends SimpleKeywordNode {\r\n    get display() { return 'None'; }\r\n}\r\nclass PassNode extends SimpleKeywordNode {\r\n    get display() { return 'Pass'; }\r\n}\r\nclass BreakNode extends SimpleKeywordNode {\r\n    get display() { return 'Break'; }\r\n}\r\nclass ContinueNode extends SimpleKeywordNode {\r\n    get display() { return 'Continue'; }\r\n}\r\nclass IdentifierNode {\r\n    constructor(name) {\r\n        this.type = 'IdentifierNode';\r\n        this.children = [];\r\n        this.name = name;\r\n    }\r\n    get display() { return `id: ${this.name}`; }\r\n    repr() { return { type: this.type, name: this.name }; }\r\n}\r\nclass StrNode {\r\n    constructor(value) {\r\n        this.type = 'StrNode';\r\n        this.children = [];\r\n        this.value = value;\r\n    }\r\n    get display() { return `str: ${this.value}`; }\r\n    repr() { return { type: this.type, value: this.value }; }\r\n}\r\nclass IntNode {\r\n    constructor(value) {\r\n        this.type = 'IntNode';\r\n        this.children = [];\r\n        this.value = value;\r\n    }\r\n    get display() { return `int: ${this.value}`; }\r\n    repr() { return { type: this.type, value: Number.parseInt(this.value.toString()) }; }\r\n}\r\nclass FloatNode {\r\n    constructor(value) {\r\n        this.type = 'FloatNode';\r\n        this.children = [];\r\n        this.value = value;\r\n    }\r\n    get display() { return `float: ${this.value}`; }\r\n    repr() { return { type: this.type, value: this.value }; }\r\n}\r\nclass AttrRefNode {\r\n    constructor(object, attr) {\r\n        this.type = 'AttrRefNode';\r\n        this.display = 'obj.attr';\r\n        this.object = object;\r\n        this.attr = attr;\r\n    }\r\n    get children() { return [this.object, this.attr]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            object: this.object.repr(),\r\n            attr: this.attr.repr()\r\n        };\r\n    }\r\n}\r\nclass SubscriptionNode {\r\n    constructor(object, args) {\r\n        this.type = 'SubscriptionNode';\r\n        this.display = 'obj[args...]';\r\n        assert(args.args.length >= 1);\r\n        this.object = object;\r\n        this.args = args;\r\n    }\r\n    get children() { return [this.object, this.args]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            object: this.object.repr(),\r\n            args: this.args.repr()\r\n        };\r\n    }\r\n}\r\nclass CallNode {\r\n    constructor(callee, args) {\r\n        this.type = 'CallNode';\r\n        this.display = 'callee(args...)';\r\n        this.callee = callee;\r\n        this.args = args;\r\n    }\r\n    get children() { return [this.callee, this.args]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            callee: this.callee.repr(),\r\n            args: this.args.repr()\r\n        };\r\n    }\r\n}\r\nclass ArgsNode {\r\n    constructor(args) {\r\n        this.type = 'ArgsNode';\r\n        this.display = 'args';\r\n        this.args = args;\r\n    }\r\n    get children() { return this.args; }\r\n    repr() { return { type: this.type, args: this.args.map(x => x.repr()) }; }\r\n}\r\nclass ReturnNode {\r\n    constructor(expr) {\r\n        this.type = 'ReturnNode';\r\n        this.display = 'return';\r\n        this.expr = expr;\r\n    }\r\n    get children() { return this.expr != null ? [this.expr] : []; }\r\n    repr() { var _a; return { type: this.type, expr: (_a = this.expr) === null || _a === void 0 ? void 0 : _a.repr() }; }\r\n}\r\nclass GlobalNode {\r\n    constructor(identifiers) {\r\n        this.type = 'GlobalNode';\r\n        this.display = 'global';\r\n        assert(identifiers.length >= 1);\r\n        this.identifiers = identifiers;\r\n    }\r\n    get children() { return this.identifiers; }\r\n    repr() { return { type: this.type, identifiers: this.identifiers.map(x => x.repr()) }; }\r\n}\r\nclass SuiteNode {\r\n    constructor(statements) {\r\n        this.type = 'SuiteNode';\r\n        this.display = 'suite';\r\n        assert(statements.length >= 1);\r\n        this.statements = statements;\r\n    }\r\n    get children() { return this.statements; }\r\n    repr() { return { type: this.type, statements: this.statements.map(x => x.repr()) }; }\r\n}\r\nclass WhileNode {\r\n    constructor(condition, suite) {\r\n        this.type = 'WhileNode';\r\n        this.display = 'while';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    get children() { return [this.condition, this.suite]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n}\r\nclass IfBranchNode {\r\n    constructor(condition, suite) {\r\n        this.type = 'IfBranchNode';\r\n        this.display = 'if';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    get children() { return [this.condition, this.suite]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n}\r\nclass ElifBranchNode {\r\n    constructor(condition, suite) {\r\n        this.type = 'ElifBranchNode';\r\n        this.display = 'elif';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    get children() { return [this.condition, this.suite]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n}\r\nclass ElseBranchNode {\r\n    constructor(suite) {\r\n        this.type = 'ElseBranchNode';\r\n        this.display = 'else';\r\n        this.suite = suite;\r\n    }\r\n    get children() { return [this.suite]; }\r\n    repr() { return { type: this.type, suite: this.suite.repr() }; }\r\n}\r\nclass IfElifElseNode {\r\n    constructor(ifBranch, elifBranches, elseBranch) {\r\n        this.type = 'IfElifElseNode';\r\n        this.display = 'if-elif-else';\r\n        this.ifBranch = ifBranch;\r\n        this.elifBranches = elifBranches;\r\n        this.elseBranch = elseBranch;\r\n    }\r\n    get children() {\r\n        const arr = [this.ifBranch, ...this.elifBranches];\r\n        if (this.elseBranch != null) {\r\n            arr.push(this.elseBranch);\r\n        }\r\n        return arr;\r\n    }\r\n    repr() {\r\n        var _a;\r\n        return {\r\n            type: this.type,\r\n            if: this.ifBranch.repr(),\r\n            elif: this.elifBranches.map(x => x.repr()),\r\n            else: (_a = this.elseBranch) === null || _a === void 0 ? void 0 : _a.repr()\r\n        };\r\n    }\r\n}\r\nclass FuncDefNode {\r\n    constructor(funcName, params, suite) {\r\n        this.type = 'FuncDefNode';\r\n        this.display = 'def';\r\n        this.funcName = funcName;\r\n        this.params = params;\r\n        this.suite = suite;\r\n    }\r\n    get children() { return [this.funcName, this.params, this.suite]; }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            funcName: this.funcName.repr(),\r\n            params: this.params.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n}\r\nclass ParamsNode {\r\n    constructor(params) {\r\n        this.type = 'ParamsNode';\r\n        this.display = 'params';\r\n        this.params = params;\r\n    }\r\n    get children() { return this.params; }\r\n    repr() { return { type: this.type, params: this.params.map(x => x.repr()) }; }\r\n}\r\nclass ProgramNode {\r\n    constructor(statements) {\r\n        this.type = 'ProgramNode';\r\n        this.display = 'program';\r\n        this.statements = statements;\r\n    }\r\n    get children() { return this.statements; }\r\n    repr() { return { type: this.type, statements: this.statements.map(x => x.repr()) }; }\r\n}\r\nexport { AddNode, MinusNode, MultiplyNode, DivNode, DivIntNode, ModNode, PowNode, ShiftLeftNode, ShiftRightNode, BitAndNode, BitOrNode, BitXorNode, AndNode, OrNode, LessNode, LeqNode, GreaterNode, GeqNode, EqualsNode, NotEqualsNode, IsNode, AssignNode, BitNotNode, NotNode, PosNode, NegNode, TrueNode, FalseNode, NoneNode, PassNode, BreakNode, ContinueNode, IdentifierNode, StrNode, IntNode, FloatNode, AttrRefNode, SubscriptionNode, CallNode, ArgsNode, ReturnNode, GlobalNode, SuiteNode, WhileNode, IfBranchNode, ElifBranchNode, ElseBranchNode, IfElifElseNode, FuncDefNode, ParamsNode, ProgramNode };\r\n//# sourceMappingURL=ast.js.map","import { asNonNull } from '../utils/enhance';\r\nimport { PySyntaxError } from '../errors';\r\nimport * as tk from '../scanner/token';\r\nimport * as ast from './ast';\r\n/**\r\n * 查看 token 序列中的下一个 token 是否是所期待的，是则取出并返回，不是则抛异常\r\n *\r\n * @param ExpectedToken 所期待 token 的构造函数\r\n * @param tokens token 序列\r\n * @returns 所期待的 token\r\n * @throws 若下一个 token 并非所期待或序列已耗尽，则抛出 `PySyntaxError`\r\n */\r\nfunction popExpectedToken(ExpectedToken, tokens) {\r\n    const expectedName = ExpectedToken.name;\r\n    if (!tokens.hasNext()) { // tokens 已耗尽\r\n        throw new PySyntaxError(`Expect ${expectedName}, but token sequence goes to end.`);\r\n    }\r\n    const token = tokens.goNext();\r\n    if (!(token instanceof ExpectedToken)) { // 非所期待 token 类型\r\n        throw new PySyntaxError(`Expect ${expectedName}, but get ${token.type} here. ` +\r\n            `line ${token.position.line + 1} col ${token.position.start + 1}`);\r\n    }\r\n    return token;\r\n}\r\nclass Identifier {\r\n    constructor(name) {\r\n        this.type = 'Identifier';\r\n        this.name = name;\r\n    }\r\n    repr() { return { type: this.type, name: this.name }; }\r\n    toASTNode() { return new ast.IdentifierNode(this.name); }\r\n    static make(tokens) {\r\n        const id = popExpectedToken(tk.IdentifierToken, tokens);\r\n        return new Identifier(id.value);\r\n    }\r\n}\r\nclass KeywordLiteral {\r\n    get type() { return this.constructor.name; }\r\n    repr() { return { type: this.type }; }\r\n}\r\nfunction makeKeywordLiteral(Literal, Token, tokens) {\r\n    popExpectedToken(Token, tokens);\r\n    return new Literal();\r\n}\r\nclass TrueLiteral extends KeywordLiteral {\r\n    toASTNode() { return new ast.TrueNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordLiteral(TrueLiteral, tk.TrueToken, tokens);\r\n    }\r\n}\r\nclass FalseLiteral extends KeywordLiteral {\r\n    toASTNode() { return new ast.FalseNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordLiteral(FalseLiteral, tk.FalseToken, tokens);\r\n    }\r\n}\r\nclass NoneLiteral extends KeywordLiteral {\r\n    toASTNode() { return new ast.NoneNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordLiteral(NoneLiteral, tk.NoneToken, tokens);\r\n    }\r\n}\r\nclass StrLiteral {\r\n    constructor(value) {\r\n        this.type = 'StrLiteral';\r\n        this.value = value;\r\n    }\r\n    repr() { return { type: this.type, value: this.value }; }\r\n    toASTNode() { return new ast.StrNode(this.value); }\r\n    static make(tokens) {\r\n        const str = popExpectedToken(tk.StringToken, tokens);\r\n        return new StrLiteral(str.getString());\r\n    }\r\n}\r\nclass IntLiteral {\r\n    constructor(value) {\r\n        this.type = 'IntLiteral';\r\n        this.value = value;\r\n    }\r\n    repr() { return { type: this.type, value: Number.parseInt(this.value.toString()) }; }\r\n    toASTNode() { return new ast.IntNode(this.value); }\r\n    static make(tokens) {\r\n        const integer = popExpectedToken(tk.IntToken, tokens);\r\n        return new IntLiteral(integer.getInt());\r\n    }\r\n}\r\nclass FloatLiteral {\r\n    constructor(value) {\r\n        this.type = 'FloatLiteral';\r\n        this.value = value;\r\n    }\r\n    repr() { return { type: this.type, value: this.value }; }\r\n    toASTNode() { return new ast.FloatNode(this.value); }\r\n    static make(tokens) {\r\n        const float = popExpectedToken(tk.FloatToken, tokens);\r\n        return new FloatLiteral(float.getFloat());\r\n    }\r\n}\r\nclass ParenthesesExpr {\r\n    constructor(expression) {\r\n        this.type = 'ParenthesesExpr';\r\n        this.expression = expression;\r\n    }\r\n    repr() { return { type: this.type, expression: this.expression.repr() }; }\r\n    toASTNode() { return this.expression.toASTNode(); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.LeftParenthesesToken, tokens);\r\n        const expression = Expression.make(tokens);\r\n        popExpectedToken(tk.RightParenthesesToken, tokens);\r\n        return new ParenthesesExpr(expression);\r\n    }\r\n}\r\nconst token2AtomFac = new Map([\r\n    [tk.IdentifierToken, Identifier.make],\r\n    [tk.StringToken, StrLiteral.make],\r\n    [tk.IntToken, IntLiteral.make],\r\n    [tk.FloatToken, FloatLiteral.make],\r\n    [tk.TrueToken, TrueLiteral.make],\r\n    [tk.FalseToken, FalseLiteral.make],\r\n    [tk.NoneToken, NoneLiteral.make],\r\n    [tk.LeftParenthesesToken, ParenthesesExpr.make],\r\n]);\r\nfunction makeAtom(tokens) {\r\n    if (!tokens.hasNext()) {\r\n        throw new PySyntaxError('Expect Atom, but token sequence goes to end.');\r\n    }\r\n    const token = tokens.viewNext();\r\n    for (const [TokenType, make] of token2AtomFac.entries()) {\r\n        if (token instanceof TokenType) {\r\n            return make(tokens);\r\n        }\r\n    }\r\n    throw new PySyntaxError(`Expect Atom, but get ${token.type} here. ` +\r\n        `line ${token.position.line + 1} col ${token.position.start + 1}`);\r\n}\r\n//#endregion\r\n//#region Primary\r\n/**\r\n * primary ::= atom {\".\" identifier | \"[\" expr_list \"]\" | \"(\" [expr_list] \")\"}\r\n */\r\nclass Primary {\r\n    constructor(atom, appends) {\r\n        this.type = 'Primary';\r\n        this.atom = atom;\r\n        this.appends = appends;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            atom: this.atom.repr(),\r\n            appends: this.appends.map(x => x.repr())\r\n        };\r\n    }\r\n    toASTNode() {\r\n        var _a, _b;\r\n        if (this.appends.length === 0) {\r\n            return this.atom.toASTNode();\r\n        }\r\n        let lch = this.atom.toASTNode();\r\n        for (const app of this.appends) {\r\n            if (app instanceof AttrRefAppend) {\r\n                const attr = app.identifier.toASTNode();\r\n                lch = new ast.AttrRefNode(lch, attr);\r\n            }\r\n            else if (app instanceof SubscriptionAppend) {\r\n                const args = app.exprList.toASTNode();\r\n                lch = new ast.SubscriptionNode(lch, args);\r\n            }\r\n            else {\r\n                const args = (_b = (_a = app.exprList) === null || _a === void 0 ? void 0 : _a.toASTNode()) !== null && _b !== void 0 ? _b : new ast.ArgsNode([]);\r\n                lch = new ast.CallNode(lch, args);\r\n            }\r\n        }\r\n        return lch;\r\n    }\r\n    static make(tokens) {\r\n        const isExpected = (token) => token instanceof tk.DotToken ||\r\n            token instanceof tk.LeftBracketToken ||\r\n            token instanceof tk.LeftParenthesesToken;\r\n        const atom = makeAtom(tokens);\r\n        const appends = [];\r\n        while (tokens.hasNext() && isExpected(tokens.viewNext())) {\r\n            const token = tokens.viewNext();\r\n            if (token instanceof tk.DotToken) {\r\n                appends.push(AttrRefAppend.make(tokens));\r\n            }\r\n            else if (token instanceof tk.LeftBracketToken) {\r\n                appends.push(SubscriptionAppend.make(tokens));\r\n            }\r\n            else { // token instance of LeftParentheses\r\n                appends.push(CallAppend.make(tokens));\r\n            }\r\n        }\r\n        return new Primary(atom, appends);\r\n    }\r\n}\r\nclass AttrRefAppend {\r\n    constructor(identifier) {\r\n        this.type = 'AttrRefAppend';\r\n        this.identifier = identifier;\r\n    }\r\n    repr() { return { type: this.type, identifier: this.identifier.repr() }; }\r\n    toASTNode() { throw new Error('Method not implemented.'); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.DotToken, tokens);\r\n        const id = Identifier.make(tokens);\r\n        return new AttrRefAppend(id);\r\n    }\r\n}\r\nclass SubscriptionAppend {\r\n    constructor(exprList) {\r\n        this.type = 'SubscriptionAppend';\r\n        this.exprList = exprList;\r\n    }\r\n    repr() { return { type: this.type, exprList: this.exprList.repr() }; }\r\n    toASTNode() { throw new Error('Method not implemented.'); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.LeftBracketToken, tokens);\r\n        const exprList = ExprList.make(tokens);\r\n        popExpectedToken(tk.RightBracketToken, tokens);\r\n        return new SubscriptionAppend(exprList);\r\n    }\r\n}\r\nclass CallAppend {\r\n    constructor(exprList) {\r\n        this.type = 'CallAppend';\r\n        this.exprList = exprList;\r\n    }\r\n    repr() { var _a; return { type: this.type, exprList: (_a = this.exprList) === null || _a === void 0 ? void 0 : _a.repr() }; }\r\n    toASTNode() { throw new Error('Method not implemented.'); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.LeftParenthesesToken, tokens);\r\n        let exprList = undefined;\r\n        if (!(tokens.viewNext() instanceof tk.RightParenthesesToken)) {\r\n            exprList = ExprList.make(tokens);\r\n        }\r\n        popExpectedToken(tk.RightParenthesesToken, tokens);\r\n        return new CallAppend(exprList);\r\n    }\r\n}\r\n/** expr_list ::= expr {\",\" expr} */\r\nclass ExprList {\r\n    constructor(expressions) {\r\n        this.type = 'ExprList';\r\n        this.expressions = expressions;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            expressions: this.expressions.map(x => x.repr())\r\n        };\r\n    }\r\n    toASTNode() { return new ast.ArgsNode(this.expressions.map(e => e.toASTNode())); }\r\n    static make(tokens) {\r\n        const expressions = [];\r\n        const first = Expression.make(tokens);\r\n        expressions.push(first);\r\n        while (tokens.hasNext() && tokens.viewNext() instanceof tk.CommaToken) {\r\n            popExpectedToken(tk.CommaToken, tokens);\r\n            const e = Expression.make(tokens);\r\n            expressions.push(e);\r\n        }\r\n        return new ExprList(expressions);\r\n    }\r\n}\r\n//#endregion\r\n//#region 幂运算\r\n/** power ::= primary [\"**\" u_expr] */\r\nclass Power {\r\n    constructor(primary, uExprs) {\r\n        this.type = 'Power';\r\n        this.primary = primary;\r\n        this.uExprs = uExprs;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            primary: this.primary.repr(),\r\n            uExprs: this.uExprs.map(x => x.repr())\r\n        };\r\n    }\r\n    toASTNode() {\r\n        if (this.uExprs.length === 0) {\r\n            return this.primary.toASTNode();\r\n        }\r\n        const arr = [this.primary, ...this.uExprs].map(e => e.toASTNode());\r\n        let rch = arr[arr.length - 1];\r\n        for (let i = arr.length - 2; i >= 0; i--) {\r\n            const lch = arr[i];\r\n            rch = new ast.PowNode(lch, rch);\r\n        }\r\n        return rch;\r\n    }\r\n    static make(tokens) {\r\n        const primary = Primary.make(tokens);\r\n        const uExprs = [];\r\n        while (tokens.hasNext() && tokens.viewNext() instanceof tk.PowToken) {\r\n            popExpectedToken(tk.PowToken, tokens);\r\n            const uExpr = UExpr.make(tokens);\r\n            uExprs.push(uExpr);\r\n        }\r\n        return new Power(primary, uExprs);\r\n    }\r\n}\r\n//#endregion\r\n//#region 一元算术和一元位运算\r\n/** u_expr ::= \"-\" u_expr | \"+\" u_expr | \"~\" u_expr | power */\r\nclass UExpr {\r\n    get type() { return this.constructor.name; }\r\n    static make(tokens) {\r\n        if (!tokens.hasNext()) {\r\n            throw new PySyntaxError('Tokens goes to end.');\r\n        }\r\n        const token = tokens.viewNext();\r\n        if (token instanceof tk.MinusToken ||\r\n            token instanceof tk.PlusToken ||\r\n            token instanceof tk.BitNotToken) {\r\n            return UExprWithOp.make(tokens);\r\n        }\r\n        else {\r\n            return UExprPower.make(tokens);\r\n        }\r\n    }\r\n}\r\nclass UExprWithOp extends UExpr {\r\n    constructor(operator, uExpr) {\r\n        super();\r\n        this.operator = operator;\r\n        this.uExpr = uExpr;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            operator: this.operator.repr(),\r\n            uExpr: this.uExpr.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        if (this.operator instanceof tk.MinusToken) {\r\n            return new ast.NegNode(this.uExpr.toASTNode());\r\n        }\r\n        else if (this.operator instanceof tk.PlusToken) {\r\n            return new ast.PosNode(this.uExpr.toASTNode());\r\n        }\r\n        else {\r\n            return new ast.BitNotNode(this.uExpr.toASTNode());\r\n        }\r\n    }\r\n    static make(tokens) {\r\n        if (!tokens.hasNext()) {\r\n            throw new PySyntaxError('Tokens goes to end.');\r\n        }\r\n        const op = tokens.viewNext();\r\n        if (op instanceof tk.MinusToken ||\r\n            op instanceof tk.PlusToken ||\r\n            op instanceof tk.BitNotToken) {\r\n            const op = tokens.goNext();\r\n            const uExpr = UExpr.make(tokens);\r\n            return new UExprWithOp(op, uExpr);\r\n        }\r\n        else {\r\n            throw new PySyntaxError(`Unexpected token, get ${op.type} here. ` +\r\n                `line ${op.position.line + 1} col ${op.position.start + 1}`);\r\n        }\r\n    }\r\n}\r\nclass UExprPower extends UExpr {\r\n    constructor(power) { super(); this.power = power; }\r\n    ;\r\n    repr() { return { type: this.type, power: this.power.repr() }; }\r\n    toASTNode() { return this.power.toASTNode(); }\r\n    static make(tokens) {\r\n        return new UExprPower(Power.make(tokens));\r\n    }\r\n}\r\n//#endregion\r\n//#region generic classes for infix expression\r\nconst opStr2BinaryNode = new Map([\r\n    ['+', ast.AddNode],\r\n    ['-', ast.MinusNode],\r\n    ['*', ast.MultiplyNode],\r\n    ['/', ast.DivNode],\r\n    ['//', ast.DivIntNode],\r\n    ['%', ast.ModNode],\r\n    ['<<', ast.ShiftLeftNode],\r\n    ['>>', ast.ShiftRightNode],\r\n    ['&', ast.BitAndNode],\r\n    ['^', ast.BitXorNode],\r\n    ['|', ast.BitOrNode],\r\n    ['<', ast.LessNode],\r\n    ['<=', ast.LeqNode],\r\n    ['>', ast.GreaterNode],\r\n    ['>=', ast.GeqNode],\r\n    ['==', ast.EqualsNode],\r\n    ['!=', ast.NotEqualsNode],\r\n    ['is', ast.IsNode],\r\n    ['and', ast.AndNode],\r\n    ['or', ast.OrNode],\r\n]);\r\n/**\r\n * 对于 `E ::= E op T | T`，消除左递归后为 `E ::= T {op T}`，\r\n * 应派生如下的类用于表示非终结符 `E`:\r\n *\r\n * ```\r\n * class E extends InfixExpr<Op, T> { }\r\n * ```\r\n */\r\nclass InfixExpr {\r\n    /**\r\n     * 创建一个形如 `E ::= T {op T}` 的非终结符\r\n     *\r\n     * @param expression EBNF 中的 `T`\r\n     * @param appends EBNF 中的 `{op T}`\r\n     */\r\n    constructor(expression, appends) {\r\n        this.expression = expression;\r\n        this.appends = appends;\r\n    }\r\n    /** 本文法符号的名字 */\r\n    get type() { return this.constructor.name; }\r\n    toASTNode() {\r\n        if (this.appends.length === 0) {\r\n            return this.expression.toASTNode();\r\n        }\r\n        let lch = this.expression.toASTNode();\r\n        for (const app of this.appends) {\r\n            const rch = app.expression.toASTNode();\r\n            const NodeCtor = asNonNull(opStr2BinaryNode.get(app.operator.value));\r\n            lch = new NodeCtor(lch, rch);\r\n        }\r\n        return lch;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            expression: this.expression.repr(),\r\n            appends: this.appends.map(x => x.repr())\r\n        };\r\n    }\r\n}\r\n/**\r\n * 为形如 `E ::= E op1 T | E op2 T | T`（消除左递归后\r\n * `E ::= T {op1 T | op2 T}`）的非终结符准备的工厂类\r\n *\r\n * 使用方法：\r\n *\r\n * ```\r\n * const eFac = new InfixExprFactory(E, [Op1, Op2], T.make);\r\n * ```\r\n */\r\nclass InfixExprFactory {\r\n    /**\r\n     * 对于`E ::= E op1 T | E op2 T | ... | T`，消除左递归后\r\n     * 为 `E ::= T {op1 T | op2 T |...}`\r\n     *\r\n     * @param ECtor `E` 的构造函数\r\n     * @param OpCtors 所有运算符的构造函数 `[op1, op2, ...]`\r\n     * @param makeT `T` 的工厂函数\r\n     */\r\n    constructor(ECtor, OpCtors, makeT) {\r\n        this.ECtor = ECtor;\r\n        this.OpCtors = OpCtors;\r\n        this.makeT = makeT;\r\n    }\r\n    /**\r\n     * 工厂函数，从 tokens 中消耗若干 token 并创建非终结符 `E`\r\n    */\r\n    make(tokens) {\r\n        const expression = this.makeT(tokens);\r\n        const appends = [];\r\n        while (tokens.hasNext() && this.isExpectedOp(tokens.viewNext())) {\r\n            const appOp = tokens.goNext();\r\n            const appExpr = this.makeT(tokens);\r\n            appends.push(new InfixExprAppend(appOp, appExpr));\r\n        }\r\n        return new this.ECtor(expression, appends);\r\n    }\r\n    /** 检查该 token 是否为所期待的运算符 */\r\n    isExpectedOp(token) {\r\n        return this.OpCtors.some(ctor => token instanceof ctor);\r\n    }\r\n}\r\n/** 表示一个 `op T` 单元 */\r\nclass InfixExprAppend {\r\n    constructor(operator, expression) {\r\n        this.type = 'InfixExprAppend';\r\n        this.operator = operator;\r\n        this.expression = expression;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            operator: this.operator.repr(),\r\n            expression: this.expression.repr()\r\n        };\r\n    }\r\n    toASTNode() { throw new Error('Method not implemented.'); }\r\n}\r\nclass MExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst mExprFac = new InfixExprFactory(MExpr, [tk.MultiplyToken, tk.DivIntToken, tk.DivToken, tk.ModToken], UExpr.make);\r\n/** a_expr ::= m_expr {\"+\" m_expr | \"-\" m_expr} */\r\nclass AExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst aExprFac = new InfixExprFactory(AExpr, [tk.PlusToken, tk.MinusToken], tokens => mExprFac.make(tokens));\r\n//#endregion\r\n//#region 二元位运算\r\n/** shift_expr ::= a_expr {\"<<\" a_expr | \">>\" a_expr} */\r\nclass ShiftExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst shiftExprFac = new InfixExprFactory(ShiftExpr, [tk.ShiftLeftToken, tk.ShiftRightToken], tokens => aExprFac.make(tokens));\r\n/** and_expr ::= shift_expr {\"&\" shift_expr} */\r\nclass AndExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst andExprFac = new InfixExprFactory(AndExpr, [tk.BitAndToken], tokens => shiftExprFac.make(tokens));\r\n/** xor_expr ::= and_expr {\"^\" and_expr} */\r\nclass XorExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst xorExprFac = new InfixExprFactory(XorExpr, [tk.BitXorToken], tokens => andExprFac.make(tokens));\r\n/** or_expr ::= xor_expr {\"|\" xor_expr} */\r\nclass OrExpr extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst orExprFac = new InfixExprFactory(OrExpr, [tk.BitOrToken], tokens => xorExprFac.make(tokens));\r\n/** comparison ::= or_expr {comp_operator or_expr} */\r\nclass Comparison extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst comparisonFac = new InfixExprFactory(Comparison, [tk.LessToken, tk.LeqToken, tk.GreaterToken, tk.GeqToken, tk.EqualsToken, tk.NotEqualsToken, tk.IsToken], tokens => orExprFac.make(tokens));\r\n//#endregion\r\n//#region 布尔运算\r\n/** not_test ::= \"not\" not_test | comparison */\r\nclass NotTest {\r\n    get type() { return this.constructor.name; }\r\n    static make(tokens) {\r\n        if (!tokens.hasNext()) {\r\n            throw new PySyntaxError('Tokens goes to end.');\r\n        }\r\n        const token = tokens.viewNext();\r\n        if (token instanceof tk.NotToken) {\r\n            return NotTestWithOp.make(tokens);\r\n        }\r\n        else {\r\n            return NotTestComparison.make(tokens);\r\n        }\r\n    }\r\n}\r\nclass NotTestWithOp extends NotTest {\r\n    constructor(operator, notTest) {\r\n        super();\r\n        this.operator = operator;\r\n        this.notTest = notTest;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            operator: this.operator.repr(),\r\n            notTest: this.notTest.repr()\r\n        };\r\n    }\r\n    toASTNode() { return new ast.NotNode(this.notTest.toASTNode()); }\r\n    static make(tokens) {\r\n        const op = popExpectedToken(tk.NotToken, tokens);\r\n        const notTest = NotTest.make(tokens);\r\n        return new NotTestWithOp(op, notTest);\r\n    }\r\n}\r\nclass NotTestComparison extends NotTest {\r\n    constructor(comparison) { super(); this.comparison = comparison; }\r\n    ;\r\n    repr() { return { type: this.type, comparison: this.comparison.repr() }; }\r\n    toASTNode() { return this.comparison.toASTNode(); }\r\n    static make(tokens) {\r\n        return new NotTestComparison(comparisonFac.make(tokens));\r\n    }\r\n}\r\n/** and_test ::= not_test {\"and\" not_test} */\r\nclass AndTest extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst andTestFac = new InfixExprFactory(AndTest, [tk.AndToken], tokens => NotTest.make(tokens));\r\n/** or_test ::= and_test {\"or\" and_test} */\r\nclass OrTest extends InfixExpr {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._ = undefined;\r\n    }\r\n}\r\nconst orTestFac = new InfixExprFactory(OrTest, [tk.OrToken], tokens => andTestFac.make(tokens));\r\n//#endregion\r\nclass Expression {\r\n    constructor(orTest) {\r\n        this.type = 'Expression';\r\n        this.orTest = orTest;\r\n    }\r\n    repr() { return { type: this.type, orTest: this.orTest.repr() }; }\r\n    toASTNode() { return this.orTest.toASTNode(); }\r\n    static make(tokens) {\r\n        const orTest = orTestFac.make(tokens);\r\n        return new Expression(orTest);\r\n    }\r\n}\r\n/** expression_stmt ::= expression newline */\r\nclass ExpressionStmt {\r\n    constructor(expression) {\r\n        this.type = 'ExpressionStmt';\r\n        this.expression = expression;\r\n    }\r\n    repr() { return { type: this.type, expression: this.expression.repr() }; }\r\n    toASTNode() { return this.expression.toASTNode(); }\r\n    static make(tokens) {\r\n        const expression = Expression.make(tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        return new ExpressionStmt(expression);\r\n    }\r\n}\r\n/** assign_stmt ::= expression \"=\" expression newline */\r\nclass AssignStmt {\r\n    constructor(left, right) {\r\n        this.type = 'AssignStmt';\r\n        this.left = left;\r\n        this.right = right;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            left: this.left.repr(),\r\n            right: this.right.repr()\r\n        };\r\n    }\r\n    toASTNode() { return new ast.AssignNode(this.left.toASTNode(), this.right.toASTNode()); }\r\n    static make(tokens) {\r\n        const left = Expression.make(tokens);\r\n        popExpectedToken(tk.AssignToken, tokens);\r\n        const right = Expression.make(tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        return new AssignStmt(left, right);\r\n    }\r\n}\r\nclass KeywordStmt {\r\n    get type() { return this.constructor.name; }\r\n    repr() { return { type: this.type }; }\r\n}\r\nfunction makeKeywordStmt(Stmt, Token, tokens) {\r\n    popExpectedToken(Token, tokens);\r\n    popExpectedToken(tk.NewLineToken, tokens);\r\n    return new Stmt();\r\n}\r\n/** pass_stmt ::= pass newline */\r\nclass PassStmt extends KeywordStmt {\r\n    toASTNode() { return new ast.PassNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordStmt(PassStmt, tk.PassToken, tokens);\r\n    }\r\n}\r\n/** break_stmt ::= \"break\" newline */\r\nclass BreakStmt extends KeywordStmt {\r\n    toASTNode() { return new ast.BreakNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordStmt(BreakStmt, tk.BreakToken, tokens);\r\n    }\r\n}\r\n/** continue_stmt ::= \"continue\" newline */\r\nclass ContinueStmt extends KeywordStmt {\r\n    toASTNode() { return new ast.ContinueNode(); }\r\n    static make(tokens) {\r\n        return makeKeywordStmt(ContinueStmt, tk.ContinueToken, tokens);\r\n    }\r\n}\r\n/** return_stmt ::= \"return\" [expression] newline */\r\nclass ReturnStmt {\r\n    constructor(expression) {\r\n        this.type = 'ReturnStmt';\r\n        this.expression = expression;\r\n    }\r\n    repr() { var _a; return { type: this.type, expression: (_a = this.expression) === null || _a === void 0 ? void 0 : _a.repr() }; }\r\n    toASTNode() { var _a; return new ast.ReturnNode((_a = this.expression) === null || _a === void 0 ? void 0 : _a.toASTNode()); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.ReturnToken, tokens);\r\n        let expression = undefined;\r\n        if (!(tokens.viewNext() instanceof tk.NewLineToken)) {\r\n            expression = Expression.make(tokens);\r\n        }\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        return new ReturnStmt(expression);\r\n    }\r\n}\r\n/** global_stmt ::= \"global\" identifier_list */\r\nclass GlobalStmt {\r\n    constructor(identifiers) {\r\n        this.type = 'GlobalStmt';\r\n        this.identifiers = identifiers;\r\n    }\r\n    repr() { return { type: this.type, identifiers: this.identifiers.repr() }; }\r\n    toASTNode() {\r\n        return new ast.GlobalNode(this.identifiers.identifiers.map(id => id.toASTNode()));\r\n    }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.GlobalToken, tokens);\r\n        const identifiers = IdentifierList.make(tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        return new GlobalStmt(identifiers);\r\n    }\r\n}\r\n/** identifier_list ::= identifier {\",\" identifier} */\r\nclass IdentifierList {\r\n    constructor(identifiers) {\r\n        this.type = 'IdentifierList';\r\n        this.identifiers = identifiers;\r\n    }\r\n    toASTNode() { throw new Error('Method not implemented.'); }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            identifiers: this.identifiers.map(x => x.repr())\r\n        };\r\n    }\r\n    static make(tokens) {\r\n        const identifiers = [];\r\n        identifiers.push(Identifier.make(tokens));\r\n        while (tokens.hasNext() && tokens.viewNext() instanceof tk.CommaToken) {\r\n            popExpectedToken(tk.CommaToken, tokens);\r\n            identifiers.push(Identifier.make(tokens));\r\n        }\r\n        return new IdentifierList(identifiers);\r\n    }\r\n}\r\n/** suite ::= indent_inc statement {statement} indent_dec */\r\nclass Suite {\r\n    constructor(statements) {\r\n        this.type = 'Suite';\r\n        this.statements = statements;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            statements: this.statements.map(x => x.repr())\r\n        };\r\n    }\r\n    toASTNode() { return new ast.SuiteNode(this.statements.map(x => x.toASTNode())); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.IndentIncToken, tokens);\r\n        const statements = [];\r\n        while (tokens.hasNext() && !(tokens.viewNext() instanceof tk.IndentDecToken)) {\r\n            statements.push(makeStatement(tokens));\r\n        }\r\n        popExpectedToken(tk.IndentDecToken, tokens);\r\n        return new Suite(statements);\r\n    }\r\n}\r\n/**\r\n * if_stmt ::= \"if\" expression \":\" newline suite\r\n *             {\"elif\" expression \":\" newline suite}\r\n *             [\"else\" \":\" newline suite]\r\n */\r\nclass IfStmt {\r\n    constructor(ifBranch, elifBranches, elseBranch) {\r\n        this.type = 'IfStmt';\r\n        this.ifBranch = ifBranch;\r\n        this.elifBranches = elifBranches;\r\n        this.elseBranch = elseBranch;\r\n    }\r\n    repr() {\r\n        var _a;\r\n        return {\r\n            type: this.type,\r\n            ifBranch: this.ifBranch.repr(),\r\n            elifBranches: this.elifBranches.map(x => x.repr()),\r\n            elseBranch: (_a = this.elseBranch) === null || _a === void 0 ? void 0 : _a.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        var _a;\r\n        return new ast.IfElifElseNode(this.ifBranch.toASTNode(), this.elifBranches.map(x => x.toASTNode()), (_a = this.elseBranch) === null || _a === void 0 ? void 0 : _a.toASTNode());\r\n    }\r\n    static make(tokens) {\r\n        const ifBranch = IfBranch.make(tokens);\r\n        const elifBranches = [];\r\n        while (tokens.hasNext() && tokens.viewNext() instanceof tk.ElifToken) {\r\n            elifBranches.push(ElifBranch.make(tokens));\r\n        }\r\n        let elseBranch = undefined;\r\n        if (tokens.hasNext() && tokens.viewNext() instanceof tk.ElseToken) {\r\n            elseBranch = ElseBranch.make(tokens);\r\n        }\r\n        return new IfStmt(ifBranch, elifBranches, elseBranch);\r\n    }\r\n}\r\nclass IfBranch {\r\n    constructor(condition, suite) {\r\n        this.type = 'IfBranch';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        return new ast.IfBranchNode(this.condition.toASTNode(), this.suite.toASTNode());\r\n    }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.IfToken, tokens);\r\n        const cond = Expression.make(tokens);\r\n        popExpectedToken(tk.ColonToken, tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        const suite = Suite.make(tokens);\r\n        return new IfBranch(cond, suite);\r\n    }\r\n}\r\nclass ElifBranch {\r\n    constructor(condition, suite) {\r\n        this.type = 'ElifBranch';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        return new ast.ElifBranchNode(this.condition.toASTNode(), this.suite.toASTNode());\r\n    }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.ElifToken, tokens);\r\n        const cond = Expression.make(tokens);\r\n        popExpectedToken(tk.ColonToken, tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        const suite = Suite.make(tokens);\r\n        return new ElifBranch(cond, suite);\r\n    }\r\n}\r\nclass ElseBranch {\r\n    constructor(suite) {\r\n        this.type = 'ElseBranch';\r\n        this.suite = suite;\r\n    }\r\n    repr() { return { type: this.type, suite: this.suite.repr() }; }\r\n    toASTNode() { return new ast.ElseBranchNode(this.suite.toASTNode()); }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.ElseToken, tokens);\r\n        popExpectedToken(tk.ColonToken, tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        const suite = Suite.make(tokens);\r\n        return new ElseBranch(suite);\r\n    }\r\n}\r\n/** while_stmt ::= \"while\" expression \":\" newline suite */\r\nclass WhileStmt {\r\n    constructor(condition, suite) {\r\n        this.type = 'WhileStmt';\r\n        this.condition = condition;\r\n        this.suite = suite;\r\n    }\r\n    repr() {\r\n        return {\r\n            type: this.type,\r\n            condition: this.condition.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        return new ast.WhileNode(this.condition.toASTNode(), this.suite.toASTNode());\r\n    }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.WhileToken, tokens);\r\n        const cond = Expression.make(tokens);\r\n        popExpectedToken(tk.ColonToken, tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        const suite = Suite.make(tokens);\r\n        return new WhileStmt(cond, suite);\r\n    }\r\n}\r\n/**\r\n * funcdef ::= \"def\" identifier \"(\" [parameter_list] \")\" \":\" newline suite\r\n * parameter_list ::= identifier_list\r\n */\r\nclass FuncDef {\r\n    constructor(name, params, suite) {\r\n        this.type = 'FuncDef';\r\n        this.name = name;\r\n        this.params = params;\r\n        this.suite = suite;\r\n    }\r\n    repr() {\r\n        var _a;\r\n        return {\r\n            type: this.type,\r\n            name: this.name.repr(),\r\n            params: (_a = this.params) === null || _a === void 0 ? void 0 : _a.repr(),\r\n            suite: this.suite.repr()\r\n        };\r\n    }\r\n    toASTNode() {\r\n        let idNodes = [];\r\n        if (this.params != null) {\r\n            idNodes.push(...this.params.identifiers.map(id => id.toASTNode()));\r\n        }\r\n        return new ast.FuncDefNode(this.name.toASTNode(), new ast.ParamsNode(idNodes), this.suite.toASTNode());\r\n    }\r\n    static make(tokens) {\r\n        popExpectedToken(tk.DefToken, tokens);\r\n        const funcName = Identifier.make(tokens);\r\n        popExpectedToken(tk.LeftParenthesesToken, tokens);\r\n        let params = undefined;\r\n        if (tokens.hasNext() && !(tokens.viewNext() instanceof tk.RightParenthesesToken)) {\r\n            params = IdentifierList.make(tokens);\r\n        }\r\n        popExpectedToken(tk.RightParenthesesToken, tokens);\r\n        popExpectedToken(tk.ColonToken, tokens);\r\n        popExpectedToken(tk.NewLineToken, tokens);\r\n        const suite = Suite.make(tokens);\r\n        return new FuncDef(funcName, params, suite);\r\n    }\r\n}\r\nfunction makeStatement(tokens) {\r\n    if (!tokens.hasNext()) {\r\n        throw new PySyntaxError('Expected Statement, but tokens goes to end.');\r\n    }\r\n    const token = tokens.viewNext();\r\n    if (token instanceof tk.IfToken) {\r\n        return IfStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.WhileToken) {\r\n        return WhileStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.DefToken) {\r\n        return FuncDef.make(tokens);\r\n    }\r\n    else if (token instanceof tk.ReturnToken) {\r\n        return ReturnStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.GlobalToken) {\r\n        return GlobalStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.PassToken) {\r\n        return PassStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.BreakToken) {\r\n        return BreakStmt.make(tokens);\r\n    }\r\n    else if (token instanceof tk.ContinueToken) {\r\n        return ContinueStmt.make(tokens);\r\n    }\r\n    else {\r\n        const e1 = Expression.make(tokens);\r\n        if (tokens.hasNext() && tokens.viewNext() instanceof tk.AssignToken) {\r\n            popExpectedToken(tk.AssignToken, tokens);\r\n            const e2 = Expression.make(tokens);\r\n            popExpectedToken(tk.NewLineToken, tokens);\r\n            return new AssignStmt(e1, e2);\r\n        }\r\n        else {\r\n            popExpectedToken(tk.NewLineToken, tokens);\r\n            return new ExpressionStmt(e1);\r\n        }\r\n    }\r\n}\r\n//#endregion\r\n/** program ::= {statement} */\r\nclass Program {\r\n    constructor(statements) {\r\n        this.type = 'Program';\r\n        this.statements = statements;\r\n    }\r\n    repr() { return { type: this.type, statements: this.statements.map(x => x.repr()) }; }\r\n    toASTNode() { return new ast.ProgramNode(this.statements.map(x => x.toASTNode())); }\r\n    static make(tokens) {\r\n        if (!tokens.hasNext()\r\n            || (tokens.hasNext()\r\n                && tokens.viewNext() instanceof tk.NewLineToken)) {\r\n            return new Program([]);\r\n        }\r\n        const statements = [];\r\n        while (tokens.hasNext()) {\r\n            statements.push(makeStatement(tokens));\r\n        }\r\n        return new Program(statements);\r\n    }\r\n}\r\nexport { Program };\r\n//# sourceMappingURL=ebnf.js.map","import { Scanner } from '../scanner/scanner';\r\nimport * as ebnf from './ebnf';\r\nclass TokenSeq {\r\n    constructor(tokens) {\r\n        this.nxt = 0;\r\n        this.tokens = tokens;\r\n    }\r\n    hasNext() { return this.nxt < this.tokens.length; }\r\n    viewNext() { return this.tokens[this.nxt]; }\r\n    goNext() {\r\n        const token = this.tokens[this.nxt];\r\n        this.nxt++;\r\n        return token;\r\n    }\r\n}\r\nclass Parser {\r\n    constructor() {\r\n        this.scanner = new Scanner();\r\n    }\r\n    toParseTree(text) {\r\n        this.scanner.clear();\r\n        const tokens = this.scanner.scan(text);\r\n        const seq = new TokenSeq(tokens);\r\n        return ebnf.Program.make(seq);\r\n    }\r\n    toAST(text) {\r\n        return this.toParseTree(text).toASTNode();\r\n    }\r\n}\r\nexport { Parser };\r\n//# sourceMappingURL=parser.js.map","<template>\r\n  <div class=\"full-holder\">\r\n    <editor :errorMsg=\"errorMsg\" @parseClick=\"parseClick\" />\r\n    <div class=\"separator\" />\r\n    <display\r\n      :tokens=\"tokens\"\r\n      :parseTree=\"parseTree\"\r\n      :ast=\"ast\"\r\n      :tree=\"tree\"\r\n      :showTreeProp=\"outShowTree\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from \"./Editor.vue\";\r\nimport Display from \"./Display.vue\";\r\nimport { Scanner } from \"../../../dist/src/scanner/scanner.js\";\r\nimport { Parser } from \"../../../dist/src/parser/parser.js\";\r\nimport * as examples from \"./examples.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      scanner: new Scanner(),\r\n      parser: new Parser(),\r\n      errorMsg: \"\",\r\n      tokens: [],\r\n      parseTree: {},\r\n      ast: {},\r\n      tree: { display: \"root\", children: [] },\r\n      outShowTree: true,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.parseClick(examples.fibonacci);\r\n  },\r\n  methods: {\r\n    parseClick(code) {\r\n      try {\r\n        this.outShowTree = false;\r\n        const tokens = this.scanner.scan(code);\r\n        const parseTree = this.parser.toParseTree(code);\r\n        const ast = parseTree.toASTNode();\r\n        this.errorMsg = \"\";\r\n        this.tokens = tokens.map((tk) => tk.repr());\r\n        this.parseTree = parseTree.repr();\r\n        this.ast = ast.repr();\r\n        this.tree = ast;\r\n        //必须延时执行渲染，否则会有 BUG\r\n        setTimeout(() => (this.outShowTree = true), 100);\r\n      } catch (error) {\r\n        this.errorMsg = error.toString();\r\n        this.tokens = [];\r\n        this.parseTree = {};\r\n        this.ast = {};\r\n        this.tree = { display: \"root\", children: [] };\r\n        this.outShowTree = false;\r\n      }\r\n    },\r\n  },\r\n  components: { Editor, Display },\r\n};\r\n</script>\r\n\r\n<style>\r\n.full-holder {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1px 1fr;\r\n}\r\n\r\n.separator {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #c4c4c4;\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Demo.vue?vue&type=template&id=8c18d8aa&\"\nimport script from \"./Demo.vue?vue&type=script&lang=js&\"\nexport * from \"./Demo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Demo.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <Demo />\n  </div>\n</template>\n\n<script>\nimport Demo from \"./components/Demo.vue\";\n\nexport default {\n  name: \"App\",\n  components: { Demo },\n};\n</script>\n\n<style>\n/** 把网页的边界去掉 */\nbody {\n  margin: 0;\n  height: 100%;\n}\n\n/** 改变盒子模型 */\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  height: 100%;\n}\n\n#app {\n  font-family: sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  margin-top: 0;\n  width: 100%;\n  height: 100%;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3baec78c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Display.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}